<h4>陣列-學生成績</h4>
<hr>
<?php

$judy=[95,64,70,90,84];
$judy=[95,64,70,90,84];
$judy=[95,64,70,90,84];
$judy=[95,64,70,90,84];
$judy=[95,64,70,90,84];
echo "<pre>";print_r($judy);echo "</pre>";

$score=[
     "judy"=>[
         "國文"=>95,
         "英文"=>64,
         "數學"=>70,
         "地理"=>90,
         "歷史"=>94,
     ],
     "amo"=>[
        "國文"=>88,
        "英文"=>78,
        "數學"=>54,
        "地理"=>81,
        "歷史"=>91,
    ],
    "john"=>[
        "國文"=>45,
        "英文"=>60,
        "數學"=>68,
        "地理"=>70,
        "歷史"=>54,
    ],
    "peter"=>[
        "國文"=>59,
        "英文"=>32,
        "數學"=>77,
        "地理"=>54,
        "歷史"=>42,
    ],
    "hebe"=>[
        "國文"=>71,
        "英文"=>62,
        "數學"=>80,
        "地理"=>62,
        "歷史"=>64,
    ],


];
echo "<pre>";print_r($score);echo "</pre>";

$array99=["i"=>[1,2,3,4,5,6,7,8,9],
          "j"=>[9,8,7,6,5,4,3,2,1],
];
for ($i=0;$i<=8;$i++){
    for($j=0;$j<=8;$j++){
    }
    echo $array99["i"][$i] * $array99["j"][$j];

}




$a=[];
        for ($i=1;$i<=9;$i++){
            for($j=1;$j<=9;$j++){
                $a[]=$i ."x" .$j ."=" .($i*$j);
            }
        }
  
echo "<pre>";print_r($a);echo "</pre>";

// for($i=0;$i<count($a);$i++){
//     echo $a[$i] ."," ;

//     if($i%9==8){
//     echo "br";
// }
// }   方法1

foreach($a as $key => $d){     //$key給d 位子
    echo $d ."," ;             //取$d這個位子的值
    if($key%9==8){
        echo "<br>";
    }
}

//=>傳址
//=傳值

$a=1;
$b=2;
$b=$a ;
echo $b ;


?>
<!-- foreach ( 陣列 as $value )
　...some code...

foreach ( 陣列 as $key => $value )
　...some code...
以上語法結構有兩個，第一個是比較簡單的寫法，每次循環的時候，
foreach 會直接將陣列值存放到 $value 中，且將指向陣列的指針向前一歩，
讓下次循環的時候能夠執行下一個陣列值，聽起來有點複雜，
但原理很簡單，就是類似迴圈的概念，第二個寫法做的是同樣的事情，
差別在於多增加了把 array key 同時存放於 $key 之中，以方便後續的調用。 -->